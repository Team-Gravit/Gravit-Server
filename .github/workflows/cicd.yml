name: gravit CICD

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build jar file & push at Docker Hub
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: set up application-prod.yml
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application-prod.yml
        env:
          spring.datasource.url: ${{secrets.POSTGRESQL_URL}}
          spring.datasource.username: ${{secrets.POSTGRESQL_USERNAME}}
          spring.datasource.password: ${{secrets.POSTGRESQL_PASSWORD}}
          jwt.secret: ${{secrets.JWT_SECRET}}

          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REDIRECT_URI: ${{ secrets.GOOGLE_REDIRECT_URI }}

          KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
          KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}
          KAKAO_REDIRECT_URI: ${{ secrets.KAKAO_REDIRECT_URI }}

          NAVER_CLIENT_ID: ${{ secrets.NAVER_CLIENT_ID }}
          NAVER_CLIENT_SECRET: ${{ secrets.NAVER_CLIENT_SECRET }}
          NAVER_REDIRECT_URI: ${{ secrets.NAVER_REDIRECT_URI }}

      - name: build with gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test -i --no-daemon -Dspring.profiles.active=prod

      - name: login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_HUB_USERNAME}}
          password: ${{secrets.DOCKER_HUB_PASSWORD}}

      - name: build Docker image
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/gravit-server:latest .

      - name: push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/gravit-server:latest

  deploy:
    name: deploy to server
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: copy configuration files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{secrets.APPCENTER_SERVER_IP}}
          username: ${{secrets.APPCENTER_SERVER_USERNAME}}
          password: ${{secrets.APPCENTER_SERVER_PASSWORD}}
          port: ${{secrets.APPCENTER_SERVER_PORT}}
          source: "docker-compose.yml,logstash.conf"
          target: "/home/serverking/gravit"

      - name: deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.APPCENTER_SERVER_IP}}
          username: ${{secrets.APPCENTER_SERVER_USERNAME}}
          password: ${{secrets.APPCENTER_SERVER_PASSWORD}}
          port: ${{secrets.APPCENTER_SERVER_PORT}}
          script: |
            cd /home/serverking/gravit

            echo "DOCKER_HUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }}" > .env
            
            docker-compose down
            docker-compose pull
            docker-compose up -d
            docker image prune -f